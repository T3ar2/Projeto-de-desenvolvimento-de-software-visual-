// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AppDataContent))]
    [Migration("20251002142911_InitialModels")]
    partial class InitialModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.20");

            modelBuilder.Entity("API.Models.Aluno", b =>
                {
                    b.Property<int>("alunoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("alunoNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("dataNascimento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("statusMatricula")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("alunoId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("API.Models.Exercicio", b =>
                {
                    b.Property<int>("exercicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("equipamento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("exercicioDescricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("exercicioNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("exercicioId");

                    b.ToTable("Exercicios");
                });

            modelBuilder.Entity("API.Models.PlanoDeTreino", b =>
                {
                    b.Property<int>("planoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAtribuicao")
                        .HasColumnType("TEXT");

                    b.Property<int>("alunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("treinoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("planoId");

                    b.HasIndex("alunoId");

                    b.HasIndex("treinoId");

                    b.ToTable("PlanosDeTreino");
                });

            modelBuilder.Entity("API.Models.Treino", b =>
                {
                    b.Property<int>("treinoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FocoMuscular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("descricaoTreino")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nomeTreino")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("treinoId");

                    b.ToTable("Treinos");
                });

            modelBuilder.Entity("API.Models.PlanoDeTreino", b =>
                {
                    b.HasOne("API.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("alunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Treino", "Treino")
                        .WithMany()
                        .HasForeignKey("treinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Treino");
                });
#pragma warning restore 612, 618
        }
    }
}
